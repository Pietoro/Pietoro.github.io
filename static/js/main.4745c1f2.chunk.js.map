{"version":3,"sources":["Header.jsx","NavButton.jsx","CVBlockElement.jsx","CVBlock.jsx","CVBlockTech.jsx","CVBlockLang.jsx","CV.jsx","CVBlockContents.jsx","MyProjects.jsx","NavLink.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Head","styled","div","Header","Button","button","NavButton","label","onClick","ProgressBar","Progress","props","value","Label","span","CVBlockElement","progress","sub","undefined","map","element","Div","Text","CVBlock","elements","title","text","className","CVBlockTech","CVBlockLang","CV","style","flex","order","width","MyProjects","Link","a","NavLink","href","target","App","useState","displayed","setDisplayed","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4745c1f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Head = styled.div`\r\n  box-sizing: border-box;\r\n  color: white;\r\n  margin: 0;\r\n  height: 100px;\r\n  text-align: center;\r\n  padding: 20px 0 20px 0;\r\n  font-size: 3em;\r\n  \r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <Head>\r\n      Hi! I'm an aspiring front-end developer\r\n    </Head>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport './App.css';\r\n\r\nconst Button = styled.button`\r\n  box-sizing: border-box;\r\n  color: white;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 1.2em;\r\n  background-color: hsl(198, 100%, 23%);\r\n  padding: 0.5em 1em;\r\n  margin: 1.7em;\r\n  font-weight: 600;\r\n  border: none;\r\n  border-radius: 5px;\r\n  box-shadow: -5px 5px hsl(0,0%,20%);\r\n  width: 180px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background-color: hsl(198, 100%, 40%);\r\n  }\r\n`;\r\n\r\nfunction NavButton({ label, onClick }) {\r\n  return (\r\n    <Button onClick={onClick}>\r\n      {label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default NavButton;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ProgressBar = styled.div`\r\n  height: 11px;\r\n  width: 150px;\r\n  border: 3px solid white;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n  float: right;\r\n  right: 10px;\r\n  margin-top: 7px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Progress = styled.div` \r\n  height: 11px;\r\n  border-radius: 5px;\r\n  width: ${props => props.value}%;\r\n  background-color: hsl(198, 100%, 30%);\r\n`;\r\n\r\nconst Label = styled.span`\r\n  color: white;\r\n`;\r\n\r\nfunction CVBlockElement({label, progress, sub}) {\r\n  return(\r\n    <li>\r\n      <Label>{label}</Label>\r\n      {progress != undefined\r\n          ? <ProgressBar>\r\n              <Progress value={progress} />\r\n            </ProgressBar> \r\n          : undefined}\r\n      <ul>\r\n      {sub\r\n        ? sub\r\n          .map((element) => (\r\n            <CVBlockElement\r\n              label={element.label}\r\n              progress={element.progress}\r\n              sub={element.sub}\r\n            />\r\n          ))\r\n        : undefined}\r\n      </ul>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CVBlockElement;","import React from 'react';\r\nimport './App.css';\r\nimport PropTypes from 'prop-types';\r\nimport CVBlockElement from './CVBlockElement';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  border-radius: 7px;\r\n  padding: 0.1em 1em;\r\n  margin: 1.5em 1em;\r\n  background-image: \r\n      linear-gradient(180deg, hsl(40,85%,63%) 60px, hsl(0,0%,35%) 60px);\r\n  box-shadow: -7px 7px hsl(0,0%,20%);\r\n`;\r\n\r\nconst Text = styled.div`\r\n  color: white;\r\n  white-space: pre-line;\r\n  line-height: 2em;\r\n  margin: 30px 15px;\r\n  font-weight: 600;\r\n`;\r\n\r\nfunction CVBlock({ elements, title, text }) {\r\n  return (\r\n    <Div>\r\n      <h3 className=\"block-header\">{title}</h3>\r\n      {elements != undefined\r\n        ? (<ul>\r\n          {elements\r\n            .map((element) => (\r\n              <CVBlockElement\r\n                label={element.label}\r\n                progress={element.progress}\r\n                sub={element.sub}\r\n              />\r\n            ))}\r\n        </ul>)\r\n        : undefined}\r\n        {text != undefined\r\n          ? <Text>{text}</Text>\r\n          : undefined }\r\n    </Div>\r\n  );\r\n}\r\n\r\nCVBlock.propTypes = {\r\n  elements: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default CVBlock;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport CVBlock from './CVBlock';\r\n\r\nfunction CVBlockTech() {\r\n  return (\r\n    <CVBlock\r\n      title=\"Technologies, tools, frameworks\"\r\n      elements={[\r\n        { label: 'HTML5', progress: 40 },\r\n        {\r\n          label: 'CSS3',\r\n          progress: 40,\r\n          sub: [\r\n            { label: 'SASS (SCSS)', progress: 30 },\r\n          ],\r\n        },\r\n        { \r\n          label: 'JavaScript ES6+',\r\n          progress: 20,\r\n          sub: [\r\n            { label: 'React', progress: 10 },\r\n          ],\r\n        },\r\n        {\r\n          label: 'Java 11+',\r\n          progress: 40,\r\n          sub: [\r\n            { label: 'JUnit, AssertJ', progress: 10 },\r\n            { label: 'JavaFX', progress: 10 },\r\n            { label: 'Maven', progress: 30 },\r\n          ],\r\n        },\r\n        { label: 'VBA', progress: 40 },\r\n        { label: 'Git', progress: 40 },\r\n        { label: 'Linux', progress: 25 },\r\n        { label: 'Inkscape', progress: 20 },\r\n        { label: 'Figma', progress: 20 },\r\n      ]}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nexport default CVBlockTech;\r\n","import React from 'react';\r\nimport CVBlock from './CVBlock';\r\nimport './App.css';\r\n\r\n\r\nfunction CVBlockLang() {\r\n  return (\r\n    <CVBlock\r\n      title=\"Languages spoken\"\r\n      elements={[\r\n        { label: 'Polish', progress: 100 },\r\n        { label: 'English', progress: 70 },\r\n        { label: 'French', progress: 15 },\r\n        { label: 'Italian', progress: 10 },\r\n      ]}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CVBlockLang;","import React from 'react';\r\nimport './App.css';\r\nimport CVBlockTech from './CVBlockTech';\r\nimport CVBlockLang from './CVBlockLang';\r\nimport CVBlock from './CVBlock';\r\nimport {technologies,work,education,otherSkills} from './CVBlockContents';\r\n\r\nfunction CV() {\r\n  return (\r\n    <main>\r\n      <div style={{\r\n                    flex: \"2\",\r\n                    order:\"1\",\r\n                    width:\"40%\"}}>\r\n        <CVBlockTech />\r\n      </div>\r\n      <div style={{\r\n                    flex: \"2\",\r\n                    order: \"2\",\r\n                    width:\"40%\"}}>\r\n        <CVBlockLang />\r\n      </div>\r\n      <div style={{\r\n                    flex: \"4\",\r\n                    order:\"3\",\r\n                    width:\"40%\"}}>\r\n        <CVBlock \r\n              title=\"Auxillary skills\"\r\n              text={otherSkills}>\r\n        </CVBlock>\r\n      </div>\r\n      <div style={{\r\n                    flex: \"1\",\r\n                    order: \"4\",\r\n                    width:\"60%\"}}>\r\n        <CVBlock\r\n              title=\"Work experience\"\r\n              text={work}>\r\n        </CVBlock>\r\n      </div>\r\n      <div style={{\r\n                    flex: \"1\",\r\n                    order:\"5\",\r\n                    width:\"60%\"}}>\r\n        <CVBlock \r\n              title=\"Education\"\r\n              text={education}>\r\n        </CVBlock>\r\n      </div>\r\n      <div style={{\r\n                    flex: \"4\",\r\n                    order:\"6\",\r\n                    width:\"60%\"}}>\r\n        <CVBlock \r\n              title=\"Technical skills\"\r\n              text={technologies}>\r\n        </CVBlock>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default CV;\r\n","const technologies = \r\n    `\\u2022 Knowledge of good programming practises: DRY, SOLID\r\n    \\u2022 Experience with unit testing and test driven development\r\n    \\u2022 Experience with object oriented programming\r\n    \\u2022 Knowledge of functional programming fundamentals\r\n    \\u2022 Basic knowledge of relational databases\r\n    \\u2022 Working with version control systems`;\r\n\r\nconst work = \r\n    `2017 - currently\r\n    Environmental Protection Specialist, EU ETS Auditor\r\n    at TÜV Rheinland Polska Sp. z o.o.\r\n    Industry Services & Cybersecurity Department\r\n\r\n    2016 - 2017\r\n    Intern at TÜV Rheinland Polska Sp. z o.o.`;\r\n\r\nconst education = \r\n    `Currently participating in „Java from Scratch” course by Software Development Academy\r\n    \r\n    2012 - 2016\r\n    University of Silesia in Katowice\r\n    Faculty of Computer Science and Material Science\r\n    B.Eng. Biomedical Engineering; specialty: Medical Computer Science\r\n    specialisation: Medical Imaging`;\r\n\r\nconst otherSkills = \r\n    `\\u2022 Vast experience in working directly with clients\r\n    \\u2022 Knowledge of UI / UX design fundamentals\r\n    \\u2022 Experience with public presentations`;\r\n\r\n\r\nexport {technologies, work, education,otherSkills};\r\n\r\n    ","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction MyProjects() {\r\n  return (\r\n    <main>\r\n      <h3>W.I.P.</h3>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MyProjects;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport './App.css';\r\n\r\n\r\nconst Link = styled.a`\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  background-color: hsl(198, 100%, 23%);\r\n  padding: 0.5em 1em;\r\n  margin: 1.7em;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n  box-shadow: -5px 5px hsl(0,0%,20%);\r\n  width: 180px;\r\n  display: inline-block;\r\n  transition: all 0.2s ease-in-out;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background-color: hsl(198, 100%, 40%);\r\n  }\r\n`;\r\n\r\nfunction NavLink({label, href}) {\r\n  return (\r\n    <Link href={href} target=\"_blank\">\r\n      { label }\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default NavLink;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './Header';\r\nimport NavButton from './NavButton';\r\nimport CV from './CV';\r\nimport MyProjects from './MyProjects';\r\nimport NavLink from './NavLink';\r\n\r\n\r\nfunction App() {\r\n  const [displayed, setDisplayed] = useState(<CV />);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className='container'>\r\n        <nav>\r\n          <NavButton label=\"CV\" onClick={() => setDisplayed(<CV />)} />\r\n          <NavButton label=\"My projects\" onClick={() => setDisplayed(<MyProjects />)} />\r\n          <NavLink label=\"My Linkedin\" href=\"https://www.linkedin.com/in/ewelina-kania-6188bb143/\" />\r\n          <NavLink label=\"My Github\" href=\"https://github.com/Pietoro\" />\r\n        </nav>\r\n        {displayed}\r\n        <footer></footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}